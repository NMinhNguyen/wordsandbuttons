<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
 <title>Words and Buttons Online</title>
 <description>A growing collection of interactive tutorials, guides and quizzes about maths, algorithms, performance, and programming languages.</description>
 <link>https://wordsandbuttons.online/</link>
 <lastBuildDate>Thu, 16 May 2019 05:45:00 +0000</lastBuildDate>
 <pubDate>Sun, 30 Dec 2018 15:40:00 +0000</pubDate>
 <ttl>1800</ttl>

 <item>
  <title>Challenge your performance intuition with C++ operators</title>
  <description>A guessing game with C++ operators, context, and disassembly.</description>
  <link>https://wordsandbuttons.online/challenge_your_performance_intuition_with_cpp_operators.html</link>
  <guid isPermaLink="true">46c480f5-b10f-4cc9-a1b7-acc781056309</guid>
  <pubDate>Tue, 25 Dec 2018 10:58:15 +0000</pubDate>
 </item>
 
 <item>
  <title>Using logical operators for logical operations is good</title>
  <description>A folow up on a guessing game with C++ operators. Let's redo a few rounds. The benchmark is the same, the questions are the same. The compiler is the same. The only thing that changes is the platform. This is now CHIP with ARMv7.</description>
  <link>https://wordsandbuttons.online/using_logical_operators_for_logical_operations_is_good.html</link>
  <guid isPermaLink="true">57e102d8-cb60-48ae-ae0c-5d8995ab5d88</guid>
  <pubDate>Sun, 30 Dec 2018 15:44:00 +0000</pubDate>
 </item> 

 <item>
  <title>Programmer's introduction to linear equations [republished in Ukrainian]</title>
  <description>The same as https://wordsandbuttons.online/programmers_introduction_to_linear_equations.html only in Ukrainian.</description>
  <link>https://wordsandbuttons.online/ua/programmers_introduction_to_linear_equations.html</link>
  <guid isPermaLink="true">ff3b144f-3808-4e7a-9d70-b0d26728fcf8</guid>
  <pubDate>Sat, 5 Jan 2019 08:24:00 +0000</pubDate>
 </item> 

 <item>
  <title>The simplest possible smooth contouring algorithm</title>
  <description>The algorithm that takes a distance function and makes a smooth contour out of it in three steps.</description>
  <link>https://wordsandbuttons.online/the_simplest_possible_smooth_contouring_algorithm.html</link>
  <guid isPermaLink="true">f73660bb-ae4b-4d83-8418-8f7c3350b2c3</guid>
  <pubDate>Tue, 15 Jan 2019 18:20:00 +0000</pubDate>
 </item> 
 
 <item>
  <title>[Renovated] Outperforming everything with anything</title>
  <description>It's about 100 lines of Python code that generate a linear solver in LLVM intermediate language outperforming C and C++ solutions. Originally published in mid 2018, now completetly rewritten.</description>
  <link>https://wordsandbuttons.online/outperforming_everything_with_anything.html</link>
  <guid isPermaLink="true">1bcc8b28-2349-4bee-b778-8d879d2cbefb</guid>
  <pubDate>Sat, 19 Jan 2019 09:05:00 +0000</pubDate>
 </item>  
 
 <item>
  <title>Simple image vectorization</title>
  <description>Vectorization is when you take some minecraft-style raster image and make a crisp vector picture out of it. The algorithm describes shows how bilinear interpolation, polynomial approximation, differential analysis, and iterative algorithms work together to solve a practical problem.</description>
  <link>https://wordsandbuttons.online/simple_image_vectorization.html</link>
  <guid isPermaLink="true">e99ce59c-a731-4d5e-9977-1e2fd4c571bd</guid>
  <pubDate>Thu, 7 Mar 2019 19:50:00 +0000</pubDate>
 </item>

 <item>
  <title>Interactive mnemonics for dot and cross vector products</title>
  <description>Dot and cross vector products are absolutely essential for everything three-dimensional. Whatever 3D thing you do: graphics, printing, physical simulation, — as soon as you want anything beyond what your framework provides, you have to do some vector magic, and these are your most basic spells.

The more embarrassing it is for me to admit. Up until very recently, I couldn't remember which way the cross product goes.</description>
  <link>https://wordsandbuttons.online/interactive_mnemonics_for_dot_and_cross_vector_products.html</link>
  <guid isPermaLink="true">336eac33-7496-4d6e-8b11-1111f950f352</guid>
  <pubDate>Tue, 26 Mar 2019 18:00:00 +0000</pubDate>
 </item>

 <item>
  <title>Lexical differential highlighting instead of syntax highlighting</title>
  <description>“Lexical” since it doesn't need true syntax analysis, primitive tokenization and filtering are enough. And it's “differential” because it aims to highlight the difference between lexemes. Ideally, the smaller the lexical difference, the greater the color difference should be. 
  
It works with any languages. And it saves your traffic.</description>
  <link>https://wordsandbuttons.online/lexical_differential_highlighting_instead_of_syntax_highlighting.html</link>
  <guid isPermaLink="true">9eee5c1c-c3a7-43ac-a35a-8817343b2183</guid>
  <pubDate>Thu, 11 Apr 2019 18:00:00 +0000</pubDate>
 </item>

 <item>
  <title>[Renovated] Estimating floating point error the easy way</title>
  <description>Unforeseen floating point error is the source of the most unpleasant bugs. The bugs that come and go unpredictably. The bugs that don't reproduce on unit-tests and lay low through the integration phase only to be seen by your most important customer.</description>
  <link>https://wordsandbuttons.online/estimating_floating_point_error_the_easy_way.html</link>
  <guid isPermaLink="true">59cc6722-9a9e-4047-8159-5418a62eb302</guid>
  <pubDate>Sat, 11 May 2019 08:45:00 +0000</pubDate>
 </item>

 <item>
  <title>Yet another floating point tutorial</title>
  <description>I still think that reexplaining some obscure concepts with different words (and buttons) might help someone understand floating point numbers better. To do fewer mistakes, to make things faster, to create better software in general.</description>
  <link>https://wordsandbuttons.online/yet_another_floating_point_tutorial.html</link>
  <guid isPermaLink="true">13b8a239-48dc-468d-a700-57336a64a738</guid>
  <pubDate>Thu, 16 May 2019 05:40:00 +0000</pubDate>
 </item>
 
</channel>
</rss>

