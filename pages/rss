<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
 <title>Words and Buttons Online</title>
 <description>A growing collection of interactive tutorials, guides and quizzes about maths, algorithms, performance, and programming languages.</description>
 <link>https://wordsandbuttons.online/</link>
 <lastBuildDate>Fri, 27 Dec 2019 08:10:00 +0000</lastBuildDate>
 <pubDate>Sun, 30 Dec 2018 15:40:00 +0000</pubDate>
 <ttl>1800</ttl>

 <item>
  <title>Challenge your performance intuition with C++ operators</title>
  <description>A guessing game with C++ operators, context, and disassembly.</description>
  <link>https://wordsandbuttons.online/challenge_your_performance_intuition_with_cpp_operators.html</link>
  <guid isPermaLink="true">46c480f5-b10f-4cc9-a1b7-acc781056309</guid>
  <pubDate>Tue, 25 Dec 2018 10:58:15 +0000</pubDate>
 </item>
 
 <item>
  <title>Using logical operators for logical operations is good</title>
  <description>A folow up on a guessing game with C++ operators. Let's redo a few rounds. The benchmark is the same, the questions are the same. The compiler is the same. The only thing that changes is the platform. This is now CHIP with ARMv7.</description>
  <link>https://wordsandbuttons.online/using_logical_operators_for_logical_operations_is_good.html</link>
  <guid isPermaLink="true">57e102d8-cb60-48ae-ae0c-5d8995ab5d88</guid>
  <pubDate>Sun, 30 Dec 2018 15:44:00 +0000</pubDate>
 </item> 

 <item>
  <title>Programmer's introduction to linear equations [republished in Ukrainian]</title>
  <description>The same as https://wordsandbuttons.online/programmers_introduction_to_linear_equations.html only in Ukrainian.</description>
  <link>https://wordsandbuttons.online/ua/programmers_introduction_to_linear_equations.html</link>
  <guid isPermaLink="true">ff3b144f-3808-4e7a-9d70-b0d26728fcf8</guid>
  <pubDate>Sat, 5 Jan 2019 08:24:00 +0000</pubDate>
 </item> 

 <item>
  <title>The simplest possible smooth contouring algorithm</title>
  <description>The algorithm that takes a distance function and makes a smooth contour out of it in three steps.</description>
  <link>https://wordsandbuttons.online/the_simplest_possible_smooth_contouring_algorithm.html</link>
  <guid isPermaLink="true">f73660bb-ae4b-4d83-8418-8f7c3350b2c3</guid>
  <pubDate>Tue, 15 Jan 2019 18:20:00 +0000</pubDate>
 </item> 
 
 <item>
  <title>[Renovated] Outperforming everything with anything</title>
  <description>It's about 100 lines of Python code that generate a linear solver in LLVM intermediate language outperforming C and C++ solutions. Originally published in mid 2018, now completetly rewritten.</description>
  <link>https://wordsandbuttons.online/outperforming_everything_with_anything.html</link>
  <guid isPermaLink="true">1bcc8b28-2349-4bee-b778-8d879d2cbefb</guid>
  <pubDate>Sat, 19 Jan 2019 09:05:00 +0000</pubDate>
 </item>  
 
 <item>
  <title>Simple image vectorization</title>
  <description>Vectorization is when you take some minecraft-style raster image and make a crisp vector picture out of it. The algorithm describes shows how bilinear interpolation, polynomial approximation, differential analysis, and iterative algorithms work together to solve a practical problem.</description>
  <link>https://wordsandbuttons.online/simple_image_vectorization.html</link>
  <guid isPermaLink="true">e99ce59c-a731-4d5e-9977-1e2fd4c571bd</guid>
  <pubDate>Thu, 7 Mar 2019 19:50:00 +0000</pubDate>
 </item>

 <item>
  <title>Interactive mnemonics for dot and cross vector products</title>
  <description>Dot and cross vector products are absolutely essential for everything three-dimensional. Whatever 3D thing you do: graphics, printing, physical simulation, — as soon as you want anything beyond what your framework provides, you have to do some vector magic, and these are your most basic spells.

The more embarrassing it is for me to admit. Up until very recently, I couldn't remember which way the cross product goes.</description>
  <link>https://wordsandbuttons.online/interactive_mnemonics_for_dot_and_cross_vector_products.html</link>
  <guid isPermaLink="true">336eac33-7496-4d6e-8b11-1111f950f352</guid>
  <pubDate>Tue, 26 Mar 2019 18:00:00 +0000</pubDate>
 </item>

 <item>
  <title>Lexical differential highlighting instead of syntax highlighting</title>
  <description>“Lexical” since it doesn't need true syntax analysis, primitive tokenization and filtering are enough. And it's “differential” because it aims to highlight the difference between lexemes. Ideally, the smaller the lexical difference, the greater the color difference should be. 
  
It works with any languages. And it saves your traffic.</description>
  <link>https://wordsandbuttons.online/lexical_differential_highlighting_instead_of_syntax_highlighting.html</link>
  <guid isPermaLink="true">9eee5c1c-c3a7-43ac-a35a-8817343b2183</guid>
  <pubDate>Thu, 11 Apr 2019 18:00:00 +0000</pubDate>
 </item>

 <item>
  <title>[Renovated] Estimating floating point error the easy way</title>
  <description>Unforeseen floating point error is the source of the most unpleasant bugs. The bugs that come and go unpredictably. The bugs that don't reproduce on unit-tests and lay low through the integration phase only to be seen by your most important customer.</description>
  <link>https://wordsandbuttons.online/estimating_floating_point_error_the_easy_way.html</link>
  <guid isPermaLink="true">59cc6722-9a9e-4047-8159-5418a62eb302</guid>
  <pubDate>Sat, 11 May 2019 08:45:00 +0000</pubDate>
 </item>

 <item>
  <title>Yet another floating point tutorial</title>
  <description>I still think that reexplaining some obscure concepts with different words (and buttons) might help someone understand floating point numbers better. To do fewer mistakes, to make things faster, to create better software in general.</description>
  <link>https://wordsandbuttons.online/yet_another_floating_point_tutorial.html</link>
  <guid isPermaLink="true">13b8a239-48dc-468d-a700-57336a64a738</guid>
  <pubDate>Thu, 16 May 2019 05:40:00 +0000</pubDate>
 </item>
 
 <item>
  <title>SymPy makes math fun again</title>
  <description>It's a Python library that does the boring part of math for you. Moreover, it does it fast, accurate, and without angst. In other words, it is everything I'm not.</description>
  <link>https://wordsandbuttons.online/sympy_makes_math_fun_again.html</link>
  <guid isPermaLink="true">3cea5d53-0c1a-486e-badc-c85101827677</guid>
  <pubDate>Tue, 25 Jun 2019 18:05:00 +0000</pubDate>
 </item>

 <item>
  <title>Circles and lines vs. polynomial splines</title>
  <description>Usually, when you want to make a parametric curve, you should go for a polynomial spline. But sometimes, for the reasons mentioned only in the second half of this page to keep you intrigued, you are not satisfied with polynomials. You have to look elsewhere. This page shows you one possible option apart from polynomials and it is an old-school parametric curve made from arcs and line segments stitched together. </description>
  <link>https://wordsandbuttons.online/circles_and_lines_vs_polynomial_splines.html</link>
  <guid isPermaLink="true">4cc82d82-827a-4d15-9b0b-5eac9c54a59e</guid>
  <pubDate>Thu, 22 Aug 2019 6:40:00 +0000</pubDate>
 </item>
 
 <item>
  <title>[Renovated] Challenge your performance intuition with C++ magic squares</title>
  <description>Let's play a game. There will be twelve rounds, each round is a match between two solutions. Or rather between their execution times. Using your intuition and best judgment, please estimate their relative performance.</description>
  <link>https://wordsandbuttons.online/challenge_your_performance_intuition_with_cpp_magic_squares.html</link>
  <guid isPermaLink="true">203a70f2-bc43-4cda-af10-baaa5286418b</guid>
  <pubDate>Mon, 26 Aug 2019 10:55:00 +0000</pubDate>
 </item>
 
 <item>
  <title>SWInE: Simplicial Weight Interpolation and Extrapolation</title>
  <description>I stole exactly three ideas from other people, made them work together, and gave that compilation a funny name. I had my fun playing with the concept but the conclusion I had to put into my thesis was: “SWInE is rather promising”. In academic language, this means “useless”. However, the three ideas behind the algorithm are prominent. And if an algorithm helps show them in action, then maybe this is what makes the algorithm worthy.</description>
  <link>https://wordsandbuttons.online/swine_simplicial_weight_interpolation_and_extrapolation.html</link>
  <guid isPermaLink="true">8689596b-7314-4711-9160-63c360b45ec6</guid>
  <pubDate>Sun, 13 Oct 2019 13:05:00 +0000</pubDate>
 </item>
 
 <item>
  <title>Challenge your performance intuition with nanosecond sorting</title>
  <description>If the operation you want to speed-up already runs in a few nano-seconds, your reasoning about algorithmic complexity probably wouldn't apply. The most effective algorithms become mediocre while the useless rise from the oblivion to shine and amaze. One of these algorithms is the index sort. It has unconditional O(n2) complexity and this makes it probably the least performant sorting algorithm you never heard about. It's useless on the macro-scale. But on the nano-scale, it excels.</description>
  <link>https://wordsandbuttons.online/challenge_your_performance_intuition_with_nanosecond_sorting.html</link>
  <guid isPermaLink="true">4fb603c2-6457-42e5-bd9c-b04296720518</guid>
  <pubDate>Tue, 5 Nov 2019 6:25:00 +0000</pubDate>
 </item>
 
 <item>
  <title>[Renovated] Logic programming in C++</title>
  <description> When you write in C++ you actually write in two languages at once. First is C++, and the second one is the invisible Prolog. If written properly, the second program is helpful. However, if being neglected, it turns your code into an untangleable mess of incomprehencibles really-really fast. </description>
  <link>https://wordsandbuttons.online/logic_programming_in_cpp.html</link>
  <guid isPermaLink="true">489a9e82-d56b-433a-b647-4a1fe8ade56e</guid>
  <pubDate>Tue, 13 Nov 2019 17:50:00 +0000</pubDate>
 </item> 

 <item>
  <title>[Renovated] SWInE: Simplicial Weight Interpolation and Extrapolation</title>
  <description>SWInE is a promising alternative to splines. This page guides you from a simple weight interpolation to spatial local interpolation and extrapolation in 3 steps.</description>
  <link>https://wordsandbuttons.online/swine_simplicial_weight_interpolation_and_extrapolation.html</link>
  <guid isPermaLink="true">4d9bc22a-df02-4963-9e6f-9de6f30c4d76</guid>
  <pubDate>Sat, 16 Nov 2019 5:55:00 +0000</pubDate>
 </item>

 <item>
  <title>Sine and cosine</title>
  <description>Interactive mnemonics and changeable snippets.TL&amp;DR: Sine is like S and cosine is like C. You can make things like O or 8 by using them both.</description>
  <link>https://wordsandbuttons.online/sine_and_cosine.html</link>
  <guid isPermaLink="true">8f438a3e-f866-4814-acd2-d8a0b2a44d77</guid>
  <pubDate>Mon, 9 Dec 2019 11:40:00 +0000</pubDate>
 </item>
 
 <item>
  <title>Honeycomb texture generator</title>
  <description>It generates a seamless black and white honeycomb texture. There are a few options in the UI but if you need more, there is some changeable code too. If you need more freedom, just get this thing on Github.</description>
  <link>https://wordsandbuttons.online/honeycomb_texture_generator.html</link>
  <guid isPermaLink="true">5d51b56c-4587-464e-a09e-0c3a3d7ce090</guid>
  <pubDate>Fri, 27 Dec 2019 08:10:00 +0000</pubDate>
 </item>

</channel> 
</rss>

